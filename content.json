{"meta":{"title":"莫坤东的博客","subtitle":null,"description":null,"author":"小白","url":"https://mokundong.cn"},"pages":[{"title":"","date":"2019-10-25T09:40:40.186Z","updated":"2019-02-21T11:34:20.574Z","comments":true,"path":"googlea31bfe60691413ce.html","permalink":"https://mokundong.cn/googlea31bfe60691413ce.html","excerpt":"","text":"google-site-verification: googlea31bfe60691413ce.html"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2019-10-15T15:10:33.000Z","comments":false,"path":"bangumi/index.html","permalink":"https://mokundong.cn/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2019-10-25T08:38:51.697Z","comments":true,"path":"about/index.html","permalink":"https://mokundong.cn/about/index.html","excerpt":"","text":"简历项目","keywords":"关于"},{"title":"categories","date":"2019-01-13T04:38:07.000Z","updated":"2019-02-21T11:34:20.956Z","comments":true,"path":"categories/index.html","permalink":"https://mokundong.cn/categories/index.html","excerpt":"","text":""},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2019-10-15T15:10:33.000Z","comments":false,"path":"client/index.html","permalink":"https://mokundong.cn/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2019-10-15T15:10:33.000Z","comments":true,"path":"comment/index.html","permalink":"https://mokundong.cn/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2019-10-15T15:10:33.000Z","comments":false,"path":"donate/index.html","permalink":"https://mokundong.cn/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2019-10-15T15:10:33.000Z","comments":false,"path":"lab/index.html","permalink":"https://mokundong.cn/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2019-10-15T15:10:33.000Z","comments":true,"path":"links/index.html","permalink":"https://mokundong.cn/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2019-10-15T15:10:33.000Z","comments":false,"path":"music/index.html","permalink":"https://mokundong.cn/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2019-10-15T15:10:33.000Z","comments":true,"path":"rss/index.html","permalink":"https://mokundong.cn/rss/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2019-10-15T15:10:33.000Z","comments":true,"path":"tags/index.html","permalink":"https://mokundong.cn/tags/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2019-10-15T15:10:33.000Z","comments":false,"path":"theme-sakura/index.html","permalink":"https://mokundong.cn/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2019-10-15T15:10:33.000Z","comments":false,"path":"video/index.html","permalink":"https://mokundong.cn/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"}],"posts":[{"title":"flask部署深度学习模型","slug":"python-flask-deeplearing-service","date":"2019-10-25T08:44:39.000Z","updated":"2019-10-25T09:25:16.251Z","comments":true,"path":"python-flask-deeplearing-service/","link":"","permalink":"https://mokundong.cn/python-flask-deeplearing-service/","excerpt":"","text":"作为著名Python web框架之一的Flask，具有简单轻量、灵活、扩展丰富且上手难度低的特点，因此成为了机器学习和深度学习模型上线跑定时任务，提供API的首选框架。众所周知，Flask默认不支持非阻塞IO的，当请求A还未完成时候，请求B需要等待请求A完成后才能被处理，所以效率非常低。但是线上任务通常需要异步、高并发等需求，本文总结一些在日常使用过程中所常用的技巧。 一、前沿 异步和多线程有什么区别？其实，异步是目的，而多线程是实现这个目的的方法。异步是说，A发起一个操作后（一般都是比较耗时的操作，如果不耗时的操作就没有必要异步了），可以继续自顾自的处理它自己的事儿，不用干等着这个耗时操作返回。实现异步可以采用多线程技术或则交给另外的进程来处理,详解常见这里。 二、实现方法 Flask启动自带方法 采用gunicorn部署 1、Flask中自带方法实现 run.py #!/usr/bin/env python # -*- coding: utf-8 -*- # @Time : 2018-12-01 16:37 # @Author : mokundong from flask import Flask import socket from time import sleep myhost = socket.gethostbyname(socket.gethostname()) app = Flask(__name__) @app.route('/job1') def some_long_task1(): print(\"Task #1 started!\") sleep(10) print(\"Task #1 is done!\") @app.route('/job2') def some_long_task2(arg1, arg2): print(\"Task #2 started with args: %s %s!\" % (arg1, arg2)) sleep(5) print(\"Task #2 is done!\") if __name__ == '__main__': app.run(host=myhost,port=5000,threaded=True) app.run(host=xxx,port=xx,threaded=True)中threaded开启后则不需要等队列。 2、gunicorn部署 Gunicorn 是一个高效的Python WSGI Server,通常用它来运行 wsgi application 或者 wsgi framework(如Django,Paster,Flask),地位相当于Java中的Tomcat。gunicorn 会启动一组 worker进程，所有worker进程公用一组listener，在每个worker中为每个listener建立一个wsgi server。每当有HTTP链接到来时，wsgi server创建一个协程来处理该链接，协程处理该链接的时候，先初始化WSGI环境，然后调用用户提供的app对象去处理HTTP请求。关于gunicorn的详细说明，可以参考这里。 使用命令行启动gunicorn有两种方式获取配置项，一种是在命令行配置，一种是在配置文件中获取。 run.py #!/usr/bin/env python # -*- coding: utf-8 -*- # @Time : 2018-12-01 17:00 # @Author : mokundong from flask import Flask from time import sleep app = Flask(__name__) @app.route('/job1') def some_long_task1(): print(\"Task #1 started!\") sleep(10) print(\"Task #1 is done!\") @app.route('/job2') def some_long_task2(arg1, arg2): print(\"Task #2 started with args: %s %s!\" % (arg1, arg2)) sleep(5) print(\"Task #2 is done!\") if __name__ == '__main__': app.run() 命令行配置gunicorn --workers=4 --bind=127.0.0.1:8000 run:app 更多配置见官网 配置文件获取配置 gunicorn_config.py #!/usr/bin/env python # -*- coding: utf-8 -*- # @Time : 2018-12-01 17:10 # @Author : mokundong import os import socket import multiprocessing import gevent.monkey gevent.monkey.patch_all() myhost = socket.gethostbyname(socket.gethostname()) debug = False loglevel = 'info' hosts = get_host_ip() bind = hosts+\":5000\" timeout = 30 #超时 pidfile = \"log/gunicorn.pid\" accesslog = \"log/access.log\" errorlog = \"log/debug.log\" daemon = True #意味着开启后台运行，默认为False workers = 4 # 启动的进程数 threads = 2 #指定每个进程开启的线程数 worker_class = 'gevent' #默认为sync模式，也可使用gevent模式。 x_forwarded_for_header = 'X-FORWARDED-FOR' 启动命令如下 gunicorn -c gunicorn_config.py run:app 三、补充1、关于线程的补充 在工作中我还遇到一种情况，当一个请求过来后，我需要两种回应，一个是及时返回app运行结果，第二个响应是保存数据到日志或者数据库。往往我们在写数据的过程中会花销一定的时间，导致结果返回会有所延迟，因此我们需要用两个线程处理这两个任务，那么我们如下处理。 run.py #!/usr/bin/env python # -*- coding: utf-8 -*- # @Time : 2018-12-01 17:20 # @Author : mokundong from flask import Flask,request from time import sleep from concurrent.futures import ThreadPoolExecutor executor = ThreadPoolExecutor(2) app = Flask(__name__) @app.route('/job') def run_jobs(): executor.submit(some_long_task1) executor.submit(some_long_task2, 'hello', 123) return 'Two jobs was launched in background!' def some_long_task1(): print(\"Task #1 started!\") sleep(10) print(\"Task #1 is done!\") def some_long_task2(arg1, arg2): print(\"Task #2 started with args: %s %s!\" % (arg1, arg2)) sleep(5) print(\"Task #2 is done!\") if __name__ == '__main__': app.run() 2、关于获取IP的补充 上述代码中通过获取hostname，然后再通过hostname反查处机器的IP。这个方法是不推荐的。因为很多的机器没有规范这个hostname的设置。另外就是有些服务器会在 /etc/hosts 中添加本机的hostname的地址，这个做法也不是不可以，但是如果设置成了 127.0.0.1，那么获取出来的IP就都是这个地址了。这里给出一种优雅的方式获取IP，利用 UDP 协议来实现的，生成一个UDP包，把自己的 IP 放如到 UDP 协议头中，然后从UDP包中获取本机的IP。 #!/usr/bin/env python # -*- coding: utf-8 -*- # @Time : 2018-12-01 17:30 # @Author : mokundong # 可以封装成函数，方便 Python 的程序调用 import socket def get_host_ip(): try: s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) s.connect(('8.8.8.8', 80)) ip = s.getsockname()[0] finally: s.close() return ip 总结当然推荐使用gunicorn部署多线程，Flask自带的，emmmm，测试玩儿玩儿吧。在写作过程中才发现自己知识漏洞不是一般多，共勉！","categories":[{"name":"python","slug":"python","permalink":"https://mokundong.cn/categories/python/"},{"name":"flask","slug":"python/flask","permalink":"https://mokundong.cn/categories/python/flask/"}],"tags":[],"keywords":[{"name":"python","slug":"python","permalink":"https://mokundong.cn/categories/python/"},{"name":"flask","slug":"python/flask","permalink":"https://mokundong.cn/categories/python/flask/"}]},{"title":"Summary-2018-12","slug":"chat-Summary-2018","date":"2018-12-30T09:44:00.000Z","updated":"2019-10-25T09:45:32.696Z","comments":true,"path":"chat-Summary-2018/","link":"","permalink":"https://mokundong.cn/chat-Summary-2018/","excerpt":"","text":"2018年可谓人生一大转折点，这年中结束了长达二十年的求学生涯摇身一变就要两肩扛砖，为一口吃喝而奔波。前半年忙论文忙答辩除了忙碌还是忙碌，不过心情还是极好的，毕竟对面长达三年身心折磨的结束还是很期待的；忘记与学校分手的第几天起，喜欢一个人…啊，呸，从七月的第一个日出那天起入职培训过渡到项目，渐渐开始融入万千互联网农民工的大军中。 一、源 其实昨天晚上我就在想我是不是也要跟个俗，写一个年度总结，纠结了很久最终还是想着这重要的一年还是要留下点什么吧。我想写写工作吧，学校留下的，大概也只有师兄姐弟妹之间的一些东西了。 二、关于工作 当初还是有那么几个工作机会摆在我面面前的，对于最后的选择我还是满意的，一来我比较喜欢现在组内的工作氛围，大家都比较照顾我；二是能够做我喜欢做的事情，也能学到很多东西；最后也能离家很近，有很多熟悉的朋友都还在。 学习 刚入职场的新人，学习总是重要的环节，不管是专业知识，工程能力还是项目沟通能力等等。 1、刚进公司，我是在数据科学团队的。这边主要做一些研究性质的事情，这段时间我的重心主要是一些理论学习。开始我没有想到这边主要做的是nlp一类的项目，而我在这一块算是比较欠缺的（毕竟我是一个学物理的，找工作的时候又看得比较杂，广而不精），所以很多时候的在看论文、看代码、逛技术博客，那段特别感谢赵xx哥和朱x兄带我。后来DS团队合并到搜索推荐组了，赵哥也走了。 2、说实话刚到搜索这边的时候，我还是比较担心的，毕竟这边工程上的事情很多，而我在这一块可能需要补的东西更多，好在老大家林哥比较照顾我，让我还是继续做之前的东西，也总是替我背锅。但研究项目终究需要工程化应用才能产生价值，这段时间非常感谢凯哥，总是很耐心的指导我一些工程上的流程和细节，总体过得也算顺利。后来朱兄和凯哥也走了。 3、那段时间走了好多人，在学校习惯了身边总是那些熟悉的面孔，突然很不适应这种状况，但后来慢慢的也习惯了。 收获 既然有学习，当然就有收获的啦。这半年我做的一个主要项目是一个与文本分类相关的事情。项目从研究、选模型到落地应用持续了好几个月，与加州大学某分校有合作。 1、在这个项目过程中，理论上学习到了比较多的内容，从CNN到Transform的特征提取方式，从word embeding到BERT框架的预训练框架均有所进一步认识。 2、 3、项目方沟通过程中，加强了与业务方的沟通能力，了解业务对模型，对工程的影响。 4、最终，模型成功应用于重要环节，在效果上相比加州大学提高了一倍，这一点我还是很满意的。 不足 自身的不足还是很明显的，特别是以后接触更多的项目，欠下的东西会越发的凸显出来。 1、Java忘记得差不多了，很多工程上的东西还没学。 2、很多基础算法的推导也渐渐模糊了。 3、身上的肉，嗯，好像还是那么多。 三、写在最后 这一年，准确说是半年大概就是这么个情况，有所获有欠缺，来年继续努力，查漏补缺。目前行业的发展有这么一个段子：“2019年可能会是过去十年里最差的一年，但却是未来十年里最好的一年”。革命尚未结束，同志仍需努力，诸君共勉！！ 2018.12.31 莫坤东","categories":[{"name":"杂谈","slug":"杂谈","permalink":"https://mokundong.cn/categories/杂谈/"}],"tags":[],"keywords":[{"name":"杂谈","slug":"杂谈","permalink":"https://mokundong.cn/categories/杂谈/"}]},{"title":"keras-test","slug":"python-keras-test","date":"2018-12-12T14:16:01.000Z","updated":"2019-10-25T09:25:11.073Z","comments":true,"path":"python-keras-test/","link":"","permalink":"https://mokundong.cn/python-keras-test/","excerpt":"","text":"12import tensorflow as tfimport tensorflow.keras as keras","categories":[{"name":"python","slug":"python","permalink":"https://mokundong.cn/categories/python/"},{"name":"keras","slug":"python/keras","permalink":"https://mokundong.cn/categories/python/keras/"}],"tags":[],"keywords":[{"name":"python","slug":"python","permalink":"https://mokundong.cn/categories/python/"},{"name":"keras","slug":"python/keras","permalink":"https://mokundong.cn/categories/python/keras/"}]}]}